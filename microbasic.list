# file opened: microbasic.asm
  1   0000              ; From the book "Interface 1 and Microdrive Programmin (Spanish)"
  2   0000              ; Written August 1983. Book Published 1984 under (c) Anaya Multimedia SA. ISBN 84-7614-038-X
  3   0000              ; Author: Agustin Nunez @agnuca https://github.com/agnunez/MicroBasic
  4   0000              ; Code: NonoComercial Creative Commons Internationa (CC BY-NC 4.0)
  5   0000
  6   0000                  DEVICE ZXSPECTRUM48
  7   0000                  ORG 0xF733  ; Load binary in 63283
  8   F733              rtop EQU $-1
  9   F733 21 32 F7         LD HL,rtop      ; Load RAMTOP  with our firmware start address
 10   F736 22 B2 5C         LD (0x5CB2),HL  ; RAMTOP System Variable address
 11   F739 C3 7B FA         JP rtv          ; jump to initialization routine
 12   F73C              var01 EQU 0x5C81
 13   F73C              var02 EQU 0x5CB0
 14   F73C              inichad EQU 0x5C5D
 15   F73C              CALBAS  EQU 0x10    ; Call a ROM1 routine from ROM2
 16   F73C              VECTOR  EQU 0x5CB7  ; Hook address for command extension while syntax error found
 17   F73C              grchbuf EQU 0xFF58
 18   F73C              main:
 19   F73C              exten:              ; Entry point with ROM2 active
 20   F73C D7               RST CALBAS      ; ROM2 call ROM1 at def word below
 21   F73D 18 00            DEFW 0x0018     ; GET-CHAR from ROM1 into A
 22   F73F 22 81 5C         LD (var01),HL
 23   F742 0E 00            LD C,0
 24   F744 21 4D F7         LD HL, stab
 25   F747 C3 E6 F7         JP othcm
 26   F74A              vecin:
 27   F74A C3 23 F8         JP inter
 28   F74D              stab:
 29   F74D E3 A0            DEFB 0xE3,0xA0		; CODE "READ"
 30   F74F E5 A0            DEFB 0xE5,0xA0		; CODE "RESTORE"
 31   F751 BF A0            DEFB 0xBF,0xA0		; CODE "IN"
 32   F753 F3 A0            DEFB 0xF3,0xA0		; CODE "NEXT"
 33   F755 2E 4F 4E 45      DEFB ".ONERROR:",0xEC,0xA0	; + CODE 'GOTO'"
 33   F759 52 52 4F 52
 33   F75D 3A EC A0
 34   F760 2E 4F 46 46      DEFB ".OFFERROR",0xA0
 34   F764 45 52 52 4F
 34   F768 52 A0
 35   F76A 2E 52 45 4E      DEFB ".REN",0xA0
 35   F76E A0
 36   F76F 2E 4E 45 57      DEFB ".NEW",0xA0
 36   F773 A0
 37   F774 2E 54 52 46      DEFB ".TRF",0xA0
 37   F778 A0
 38   F779 2E 44 45 4C      DEFB ".DEL",0xA0
 38   F77D A0
 39   F77E 2E 46 4E 44      DEFB ".FND",0xA0
 39   F782 A0
 40   F783 2E 43 48 41      DEFB ".CHA",0xA0
 40   F787 A0
 41   F788 2E 41 4F 46      DEFB ".AOF",0xA0
 41   F78C A0
 42   F78D 2E 41 4F 4E      DEFB ".AON",0xA0
 42   F791 A0
 43   F792 AA A0            DEFB 0xAA,0xA0 ; CODE "SCREEN$"
 44   F794 C3 A0            DEFB 0xC3,0xA0 ; CODE "NOT"  (SAVE)
 45   F796 2D A0            DEFB 0x2D,0xA0 ; CODE "-"	 (LOAD)
 46   F798 3C A0            DEFB 0x3C,0xA0 ; CODE "<"	 (VERIFY)
 47   F79A 3E A0            DEFB 0x3E,0xA0 ; CODE ">"	 (MERGE)
 48   F79C 26 A0            DEFB 0x26,0xA0 ; CODE "&"	 (MOVE)
 49   F79E 27 A0            DEFB 0x27,0xA0 ; CODE "'"	 (ERASE)
 50   F7A0 5F A0            DEFB 0x5F,0xA0 ; CODE "_"	 (FORMAT)
 51   F7A2 24 A0            DEFB 0x24,0xA0 ; CODE "$"	 (OPEN#)
 52   F7A4              finstab:
 53   F7A4 FF               DEFB 0xFF	   ; End of command table
 54   F7A5 00 00 00 00      DEFB 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ; Filler
 54   F7A9 00 00 00 00
 55   F7AD              rtab:		  ; command code start address table
 56   F7AD 23 F8            DEFW comm
 57   F7AF 23 F8            DEFW comm
 58   F7B1 23 F8            DEFW comm
 59   F7B3 23 F8            DEFW nexts
 60   F7B5 23 F8            DEFW roner
 61   F7B7 23 F8            DEFW offer
 62   F7B9 23 F8            DEFW rren
 63   F7BB 32 FA            DEFW rnew
 64   F7BD 23 F8            DEFW rtr
 65   F7BF 23 F8            DEFW rdel
 66   F7C1 A9 FC            DEFW rfnd
 67   F7C3 B8 FC            DEFW rcha
 68   F7C5 23 F8            DEFW raof
 69   F7C7 23 F8            DEFW raon
 70   F7C9 23 F8            DEFW rcopy
 71   F7CB F0 FE            DEFW rsave
 72   F7CD F4 FE            DEFW rload
 73   F7CF F8 FE            DEFW rvery
 74   F7D1 FC FE            DEFW rmerg
 75   F7D3 06 FF            DEFW rmove
 76   F7D5 0A FF            DEFW reras
 77   F7D7 0E FF            DEFW rform
 78   F7D9              finrtab
 79   F7D9 18 FF            DEFW ropen
 80   F7DB              rlibre:
 81   F7DB 00 00 00 00      DEFB 0x0,0x0,0x0,0x0
 82   F7DF              other:
 83   F7DF C5               PUSH BC
 84   F7E0 E5               PUSH HL
 85   F7E1 D7               RST CALBAS // Call 0x0020 of ROM1 from ROM2
 86   F7E2 20 00            DEFW 0x0020  // NEXT-CHAR from ROM1 incrementing CH-ADD
 87   F7E4 E1               POP HL
 88   F7E5 C1               POP BC
 89   F7E6              othcm:
 90   F7E6 46               LD B,(HL)
 91   F7E7 B8               CP B
 92   F7E8 28 1E            JR Z, mat1
 93   F7EA 47               LD B,A
 94   F7EB              nmat1:
 95   F7EB 23               INC HL
 96   F7EC 7E               LD A,(HL)
 97   F7ED FE FF            CP 0xFF
 98   F7EF 28 14            JR Z, taber
 99   F7F1 FE A0            CP 0xA0
100   F7F3 20 F6            JR NZ, nmat1
101   F7F5 23               INC HL
102   F7F6 78               LD A,B
103   F7F7 E5               PUSH HL
104   F7F8 2A 81 5C         LD HL,(var01)
105   F7FB 22 5D 5C         LD (inichad),HL
106   F7FE D7               RST CALBAS
107   F7FF 18 00            DEFW 0x0018 // GET-CHAR at ROM1
108   F801 E1               POP HL
109   F802 0C               INC C
110   F803 18 E1            JR othcm
111   F805              taber:
112   F805 C3 F0 01         JP 0x01F0
113   F808              mat1:
114   F808 47               LD B,A
115   F809 23               INC HL
116   F80A 7E               LD A, (HL)
117   F80B FE A0            CP 0xA0
118   F80D 28 02            JR Z, found
119   F80F 18 CE            JR other
120   F811              found:
121   F811 79               LD A,C
122   F812 21 AD F7         LD HL, rtab
123   F815 CB 21            SLA C
124   F817 59               LD E,C
125   F818 16 00            LD D,0x0
126   F81A 19               ADD HL, DE
127   F81B 5E               LD E, (HL)
128   F81C 23               INC HL
129   F81D 56               LD D,(HL)
130   F81E EB               EX DE,HL
131   F81F 32 B0 5C         LD (var02),A
132   F822 E9               JP (HL)
133   F823
134   F823              comm:
135   F823              nexts:
136   F823              roner:
137   F823              offer:
138   F823              rren:
139   F823              rtr:
140   F823              rdel:
141   F823              raof:
142   F823              raon:
143   F823              rcopy:
144   F823              inter:
145   F823
146   F823 00 00 00...      DS 0xFA32-$,0  // 64050
147   FA32              rnew:
148   FA32 D7               RST CALBAS
149   FA33 20 00            DEFW 0x0020     ; Call NEXT-CHAR at ROM1. Test for keypress, incrementing CH-ADD
150   FA35 CD B7 05         CALL 0x05B7     ; ST-END Confirm end of statement and exit from ROM2 into ROM1 editor
151   FA38 D7               RST CALBAS
152   FA39 41 FA            DEFW new        ; copy NEW from ROM1 into Graphic character buffer
153   FA3B              retu:
154   FA3B C3 5F FA         JP rtu          ; Jump over NEW copy code and resume
155   FA3E              retv:
156   FA3E C3 7B FA         JP rtv
157   FA41              new:                ; Copy 1st part of fake NEW into grchbuf
158   FA41 11 58 FF         LD DE, grchbuf  ; Graphic character USR"a" buffer address
159   FA44 21 B7 11         LD HL, 0x11B7   ; NEW ROM1 1st routine block
160   FA47 01 47 00         LD BC, 0x0047   ; transfer 0x47 bytes 1st segment
161   FA4A ED B0            LDIR
162   FA4C 21 19 12         LD HL, 0x1219   ; NEW ROM1 second block
163   FA4F 01 5D 00         LD BC, 0x005D   ; transfer 0x5D bytes
164   FA52 ED B0            LDIR
165   FA54 21 3B FA         LD HL, retu     ; add rtu return address at the end of fake NEW copy 1st part
166   FA57 01 03 00         LD BC, 0x03     ; transfer 3 bytes
167   FA5A ED B0            LDIR
168   FA5C C3 58 FF         JP grchbuf      ; execute 1st part of fake NEW
169   FA5F              rtu:
170   FA5F 11 58 FF         LD DE, grchbuf
171   FA62 21 76 12         LD HL ,0x1276
172   FA65 01 2A 00         LD BC, 0x002A
173   FA68 ED B0            LDIR
174   FA6A 21 3E FA         LD HL, retv     ; add rtv return address at the end of fake NEW copy 2nd part
175   FA6D 01 03 00         LD BC, 0x03
176   FA70 ED B0            LDIR
177   FA72 21 89 FD         LD HL, pomsg
178   FA75 22 79 FF         LD (grchbuf+0x21),HL
179   FA78 C3 58 FF         JP grchbuf      ; execute 2nd part of fake NEW with pomsg welcome message and resume at rtv
180   FA7B              rtv:
181   FA7B CF               RST 0x08        ; Call Hook at ROM2
182   FA7C 31               DEFB 0x31       ; Creates the new system variables used by the Interface 1
183   FA7D 21 3C F7         LD HL, exten
184   FA80 22 B7 5C         LD (VECTOR),HL  ; Load our "exten" new command service routine into VECTOR System Variable
185   FA83 21 FF FF         LD HL, 0xFFFF   ; Copy Graphic Characters from ROM1 into used grchbuf top-down
186   FA86 11 AF 3E         LD DE, 0x3EAF
187   FA89 01 A0 00         LD BC,0x00A0
188   FA8C EB               EX DE,HL
189   FA8D ED B8            LDDR
190   FA8F 3A 6A 5C         LD A,(0x5C6A)   ; Activate Uppercase to easy new commands
191   FA92 CB DF            SET 3,A
192   FA94 32 6A 5C         LD (0x5C6A),A   ; FLAGS2 00000100 (Set CAPS LOCK)
193   FA97 3E 00            LD A,0x00
194   FA99 32 91 5C         LD (0x5C91),A   ; P-FLAGS 01011000 (Paper 9 temp, Ink 9 temp, Inverse permanent)
195   FA9C C3 A9 12         JP 0x12A9       ; MAIN-1 tranfer back control to ROM1 main execution loop
196   FA9F
197   FA9F              ; gap
198   FA9F 00 00 00...      DS 0xFCA9-$,0
199   FCA9              rfnd:               ; .FND Find string in Basic lines command
200   FCA9 D7               RST 0x10
201   FCAA 20 00            DEFW 0x0020     ; Parse a character
202   FCAC D7               RST 0x10        ; Parse to end of string
203   FCAD 8C 1C            DEFW 0x1C8C
204   FCAF CD B7 05         CALL 0x05B7     ; Exit editor
205   FCB2 D7               RST 0x10
206   FCB3 E3 FC            DEFW sr0        ; call sr0 in ROM1 0xFCE3
207   FCB5 C3 C1 05         JP 0x05C1       ; command exit
208   FCB8              rcha:               ; .CHA Change string command
209   FCB8 D7               RST 0x10
210   FCB9 20 00            DEFW 0x0020     ; Parse next character
211   FCBB D7               RST 0x10
212   FCBC 8C 1C            DEFW 0x1C8C     ; Parse to end of string in ROM1
213   FCBE FE CC            CP 0xCC
214   FCC0 C2 F0 01         JP NZ,0x01F0    ; Error if  we do not have a 'TO' separator
215   FCC3 D7               RST 0x10
216   FCC4 20 00            DEFW 0x0020     ; Next character
217   FCC6 D7               RST 0x10        ; Parse a character string
218   FCC7 8C 1C            DEFW 0x1C8C
219   FCC9 CD B7 05         CALL 0x05B7     ; Exit editor
220   FCCC D7               RST 0x10        ; call ch0 with ROM1
221   FCCD D2 FC            DEFW ch0
222   FCCF C3 C1 05         JP 0x05C1       ; Command exit
223   FCD2              ch0:
224   FCD2 CD F1 2B         CALL 0x2BF1     ; DE = last string start
225   FCD5 79               LD A,C          ; BC = last string length
226   FCD6 FE 00            CP 0            ; length is 0?
227   FCD8 C8               RET Z           ; Resume Basic
228   FCD9 21 00 5B         LD HL,0x5B00
229   FCDC 71               LD (HL),C       ; second string length into 0x5B00
230   FCDD 23               INC HL
231   FCDE 70               LD (HL),B
232   FCDF 23               INC HL
233   FCE0 EB               EX DE, HL       ; Copy in 0x5B02 second string
234   FCE1 ED B0            LDIR
235   FCE3              sr0:
236   FCE3 CD F1 2B         CALL 0x2BF1
237   FCE6 D5               PUSH DE
238   FCE7 DD E1            POP IX
239   FCE9 79               LD A,C
240   FCEA 32 81 5C         LD (var01),A
241   FCED              sr1:
242   FCED FD CB 02 86      RES 0,(IY+2)
243   FCF1 2A 53 5C         LD HL,(0x5C53)
244   FCF4              sr2:
245   FCF4 3A 81 5C         LD A,(var01)
246   FCF7 5F               LD E,A
247   FCF8 FE 00            CP 0x0
248   FCFA C8               RET Z
249   FCFB E5               PUSH HL
250   FCFC              sr3:
251   FCFC DD E5            PUSH IX
252   FCFE C1               POP BC
253   FCFF 16 00            LD D,0x0
254   FD01 23               INC HL
255   FD02 23               INC HL
256   FD03 23               INC HL
257   FD04              sr4:
258   FD04 23               INC HL
259   FD05 D5               PUSH DE
260   FD06 ED 5B 4B 5C      LD DE,(0x5C4B)
261   FD0A AF               XOR A
262   FD0B A7               AND A
263   FD0C ED 52            SBC HL,DE
264   FD0E 19               ADD HL,DE
265   FD0F D1               POP DE
266   FD10 38 02            JR C,sr5
267   FD12 E1               POP HL
268   FD13 C9               RET
269   FD14              sr5:
270   FD14 7E               LD A,(HL)
271   FD15 FE 0D            CP 0x0D
272   FD17 20 05            JR NZ,sr6
273   FD19 23               INC HL
274   FD1A C1               POP BC
275   FD1B E5               PUSH HL
276   FD1C 18 DE            JR sr3
277   FD1E              sr6:
278   FD1E CD B6 18         CALL 0x18B6
279   FD21 20 11            JR NZ,sr8
280   FD23 2B               DEC HL
281   FD24              sr7:
282   FD24 7A               LD A,D
283   FD25 FE 00            CP 0x0
284   FD27 28 04            JR Z,sr71
285   FD29 42               LD B,D
286   FD2A              sr70:
287   FD2A 2B               DEC HL
288   FD2B 10 FD            DJNZ sr70
289   FD2D              sr71:
290   FD2D DD E5            PUSH IX
291   FD2F C1               POP BC
292   FD30 16 00            LD D,0
293   FD32 18 D0            JR sr4
294   FD34              sr8:
295   FD34 0A               LD A,(BC)
296   FD35 BE               CP (HL)
297   FD36 20 EC            JR NZ,sr7
298   FD38 03               INC BC
299   FD39 14               INC D
300   FD3A 7A               LD A,D
301   FD3B BB               CP E
302   FD3C 20 C6            JR NZ,sr4
303   FD3E 3A B0 5C         LD A,(0x5CB0)
304   FD41 FE 0A            CP 0x0A ; Jump if command is .CHA
305   FD43 20 12            JR NZ,ch1
306   FD45              sr9:
307   FD45 E1               POP HL
308   FD46 E5               PUSH HL
309   FD47 46               LD B,(HL)
310   FD48 23               INC HL
311   FD49 4E               LD C,(HL)
312   FD4A ED 43 49 5C      LD (0x5C49),BC
313   FD4E E1               POP HL
314   FD4F CD 55 18         CALL 0x1855
315   FD52 3E 0D            LD A,0x0D
316   FD54 D7               RST 0x10
317   FD55 18 9D            JR sr2
318   FD57              ch1:
319   FD57 7B               LD A,E
320   FD58 FE 01            CP 0x1
321   FD5A 28 05            JR Z,ch3
322   FD5C 3D               DEC A
323   FD5D 47               LD B,A
324   FD5E              ch2:
325   FD5E 2B               DEC HL
326   FD5F 10 FD            DJNZ ch2
327   FD61              ch3:
328   FD61 3A 00 5B         LD A,(0x5B00)
329   FD64 BB               CP E
330   FD65 28 08            JR Z,ch4
331   FD67 38 06            JR C,ch4
332   FD69 7B               LD A,E
333   FD6A 32 00 5B         LD (0x5B00),A
334   FD6D 18 00            JR ch4
335   FD6F              ch4:
336   FD6F EB               EX DE,HL
337   FD70 21 02 5B         LD HL,0x5B02
338   FD73 06 00            LD B,0x0
339   FD75 3A 00 5B         LD A,(0x5B00)
340   FD78 4F               LD C,A
341   FD79 ED B0            LDIR
342   FD7B EB               EX DE,HL
343   FD7C 2B               DEC HL
344   FD7D DD E5            PUSH IX
345   FD7F C1               POP BC
346   FD80 3A 81 5C         LD A,(0x5C81)
347   FD83 16 00            LD D,0
348   FD85 5F               LD E,A
349   FD86 C3 04 FD         JP sr4
350   FD89              pomsg:
351   FD89 A0               DEFB 0xA0
352   FD8A 4D 69 63 72      DEFB "Micro Basic O.S. ANC SPAIN "
352   FD8E 6F 20 42 61
352   FD92 73 69 63 20
352   FD96 4F 2E 53 2E
352   FD9A 20 41 4E 43
352   FD9E 20 53 50 41
352   FDA2 49 4E 20
353   FDA5 7F               DEFB 0x7F
354   FDA6 31 39 38         DEFB "198"
355   FDA9 B4               DEFB 0xB4
356   FDAA              ; gap
357   FDAA 00 00 00...      DS 0xFEF0-$,0
358   FEF0              rsave:
359   FEF0 3E F8            LD A,0xF8
360   FEF2 18 0A            JR sacon
361   FEF4              rload:
362   FEF4 3E EF            LD A,0xEF
363   FEF6 18 06            JR sacon
364   FEF8              rvery:
365   FEF8 3E D6            LD A,0xD6
366   FEFA 18 02            JR sacon
367   FEFC              rmerg:
368   FEFC 3E D5            LD A,0xD5
369   FEFE              sacon:
370   FEFE 01 0A 00         LD BC,0x0A
371   FF01 11 39 FF         LD DE,texcm
372   FF04 18 1A            JR ampli
373   FF06              rmove:
374   FF06 3E D1            LD A,0xD1
375   FF08 18 06            JR mocon
376   FF0A              reras:
377   FF0A 3E D2            LD A,0xD2
378   FF0C 18 02            JR mocon
379   FF0E              rform:
380   FF0E 3E D0            LD a,0xD0
381   FF10              mocon:
382   FF10 11 43 FF         LD DE, texsa
383   FF13 01 09 00         LD BC,0x9
384   FF16 18 08            JR ampli
385   FF18              ropen:
386   FF18 3E D3            LD A,0xD3
387   FF1A 11 4C FF         LD DE,texop
388   FF1D 01 0B 00         LD BC, 0x0B
389   FF20              ampli:
390   FF20 D5               PUSH DE
391   FF21 C5               PUSH BC
392   FF22 12               LD (DE),A
393   FF23 D7               RST 0x10
394   FF24 20 00            DEFW 0x0020
395   FF26 C1               POP BC
396   FF27 C5               PUSH BC
397   FF28 0B               DEC BC
398   FF29 D7               RST 0x10
399   FF2A 55 16            DEFW 0x1655
400   FF2C C1               POP BC
401   FF2D D1               POP DE
402   FF2E EB               EX DE,HL
403   FF2F ED B0            LDIR
404   FF31 EB               EX DE,HL
405   FF32 2B               DEC HL
406   FF33 22 5B 5C         LD (0x5C5B),HL
407   FF36 C3 F0 01         JP 0x01F0
408   FF39              texcm:
409   FF39 F8               DEFB 0xF8
410   FF3A              texmd:
411   FF3A 2A 22 6D 22      DEFB "*",0x22,"m",0x22,0x3B,"1",0x3B,0x22,0x22
411   FF3E 3B 31 3B 22
411   FF42 22
412   FF43              texsa
413   FF43 D1 22 6D 22      DEFB 0xD1,0x22,"m",0x22,0x3B,"1",0x3B,0x22,0x22
413   FF47 3B 31 3B 22
413   FF4B 22
414   FF4C              texop:
415   FF4C D3 38 3B 22      DEFB 0xD3,"8",0x3B,0x22,"m",0x22,0x3B,"1",0x3B,0x22,0x22
415   FF50 6D 22 3B 31
415   FF54 3B 22 22
416   FF57
# file closed: microbasic.asm

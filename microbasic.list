# file opened: microbasic.asm
  1   0000              ; From the book "Interface 1 and Microdrive Programmin (Spanish)"
  2   0000              ; Written August 1983. Book Published 1984 under (c) Anaya Multimedia SA. ISBN 84-7614-038-X
  3   0000              ; Author: Agustin Nunez @agnuca https://github.com/agnunez/MicroBasic
  4   0000              ; Code: NonoComercial Creative Commons Internationa (CC BY-NC 4.0)
  5   0000
  6   0000                  DEVICE ZXSPECTRUM48
  7   0000                  ORG 0xF733  ; Load binary in 63283
  8   F733              rtop EQU $-1
  9   F733 21 32 F7         LD HL,rtop      ; Load RAMTOP  with our firmware start address
 10   F736 22 B2 5C         LD (0x5CB2),HL  ; RAMTOP System Variable address
 11   F739 C3 7B FA         JP rtv          ; jump to initialization routine
 12   F73C              var01 EQU 0x5C81
 13   F73C              var02 EQU 0x5CB0
 14   F73C              inichad EQU 0x5C5D
 15   F73C              grchbuf EQU 0xFF58
 16   F73C              CALBAS  EQU 0x10
 17   F73C              VECTOR  EQU 0x5CB7
 18   F73C              main:
 19   F73C              exten:              ; Entry point with ROM2 active
 20   F73C D7               RST CALBAS      ; ROM2 call ROM1 at def word below
 21   F73D 18 00            DEFW 0x0018     ; GET-CHAR from ROM1 into A
 22   F73F 22 81 5C         LD (var01),HL
 23   F742 0E 00            LD C,0
 24   F744 21 4D F7         LD HL, stab
 25   F747 C3 E6 F7         JP othcm
 26   F74A              vecin:
 27   F74A C3 23 F8         JP inter
 28   F74D              stab:
 29   F74D E3 A0            DEFB 0xE3,0xA0		; CODE "READ"
 30   F74F E5 A0            DEFB 0xE5,0xA0		; CODE "RESTORE"
 31   F751 BF A0            DEFB 0xBF,0xA0		; CODE "IN"
 32   F753 F3 A0            DEFB 0xF3,0xA0		; CODE "NEXT"
 33   F755 2E 4F 4E 45      DEFB ".ONERROR:",0xEC,0xA0	; + CODE 'GOTO'"
 33   F759 52 52 4F 52
 33   F75D 3A EC A0
 34   F760 2E 4F 46 46      DEFB ".OFFERROR",0xA0
 34   F764 45 52 52 4F
 34   F768 52 A0
 35   F76A 2E 52 45 4E      DEFB ".REN",0xA0
 35   F76E A0
 36   F76F 2E 4E 45 57      DEFB ".NEW",0xA0
 36   F773 A0
 37   F774 2E 54 52 46      DEFB ".TRF",0xA0
 37   F778 A0
 38   F779 2E 44 45 4C      DEFB ".DEL",0xA0
 38   F77D A0
 39   F77E 2E 46 4E 44      DEFB ".FND",0xA0
 39   F782 A0
 40   F783 2E 43 48 41      DEFB ".CHA",0xA0
 40   F787 A0
 41   F788 2E 41 4F 46      DEFB ".AOF",0xA0
 41   F78C A0
 42   F78D 2E 41 4F 4E      DEFB ".AON",0xA0
 42   F791 A0
 43   F792 AA A0            DEFB 0xAA,0xA0 ; CODE "SCREEN$"
 44   F794 C3 A0            DEFB 0xC3,0xA0 ; CODE "NOT"  (SAVE)
 45   F796 2D A0            DEFB 0x2D,0xA0 ; CODE "-"	 (LOAD)
 46   F798 3C A0            DEFB 0x3C,0xA0 ; CODE "<"	 (VERIFY)
 47   F79A 3E A0            DEFB 0x3E,0xA0 ; CODE ">"	 (MERGE)
 48   F79C 26 A0            DEFB 0x26,0xA0 ; CODE "&"	 (MOVE)
 49   F79E 27 A0            DEFB 0x27,0xA0 ; CODE "'"	 (ERASE)
 50   F7A0 5F A0            DEFB 0x5F,0xA0 ; CODE "_"	 (FORMAT)
 51   F7A2 24 A0            DEFB 0x24,0xA0 ; CODE "$"	 (OPEN#)
 52   F7A4              finstab:
 53   F7A4 FF               DEFB 0xFF	   ; End of command table
 54   F7A5 00 00 00 00      DEFB 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ; Filler
 54   F7A9 00 00 00 00
 55   F7AD              rtab:		  ; command code start address table
 56   F7AD 23 F8            DEFW comm
 57   F7AF 23 F8            DEFW comm
 58   F7B1 23 F8            DEFW comm
 59   F7B3 23 F8            DEFW nexts
 60   F7B5 23 F8            DEFW roner
 61   F7B7 23 F8            DEFW offer
 62   F7B9 23 F8            DEFW rren
 63   F7BB 32 FA            DEFW rnew
 64   F7BD 23 F8            DEFW rtr
 65   F7BF 23 F8            DEFW rdel
 66   F7C1 A9 FC            DEFW rfnd
 67   F7C3 23 F8            DEFW rcha
 68   F7C5 23 F8            DEFW raof
 69   F7C7 23 F8            DEFW raon
 70   F7C9 23 F8            DEFW rcopy
 71   F7CB F0 FE            DEFW rsave
 72   F7CD F4 FE            DEFW rload
 73   F7CF F8 FE            DEFW rvery
 74   F7D1 FC FE            DEFW rmerg
 75   F7D3 06 FF            DEFW rmove
 76   F7D5 0A FF            DEFW reras
 77   F7D7 0E FF            DEFW rform
 78   F7D9              finrtab
 79   F7D9 18 FF            DEFW ropen
 80   F7DB              rlibre:
 81   F7DB 00 00 00 00      DEFB 0x0,0x0,0x0,0x0
 82   F7DF              other:
 83   F7DF C5               PUSH BC
 84   F7E0 E5               PUSH HL
 85   F7E1 D7               RST CALBAS // Call 0x0020 of ROM1 from ROM2
 86   F7E2 20 00            DEFW 0x0020  // NEXT-CHAR from ROM1 incrementing CH-ADD
 87   F7E4 E1               POP HL
 88   F7E5 C1               POP BC
 89   F7E6              othcm:
 90   F7E6 46               LD B,(HL)
 91   F7E7 B8               CP B
 92   F7E8 28 1E            JR Z, mat1
 93   F7EA 47               LD B,A
 94   F7EB              nmat1:
 95   F7EB 23               INC HL
 96   F7EC 7E               LD A,(HL)
 97   F7ED FE FF            CP 0xFF
 98   F7EF 28 14            JR Z, taber
 99   F7F1 FE A0            CP 0xA0
100   F7F3 20 F6            JR NZ, nmat1
101   F7F5 23               INC HL
102   F7F6 78               LD A,B
103   F7F7 E5               PUSH HL
104   F7F8 2A 81 5C         LD HL,(var01)
105   F7FB 22 5D 5C         LD (inichad),HL
106   F7FE D7               RST CALBAS
107   F7FF 18 00            DEFW 0x0018 // GET-CHAR at ROM1
108   F801 E1               POP HL
109   F802 0C               INC C
110   F803 18 E1            JR othcm
111   F805              taber:
112   F805 C3 F0 01         JP 0x01F0
113   F808              mat1:
114   F808 47               LD B,A
115   F809 23               INC HL
116   F80A 7E               LD A, (HL)
117   F80B FE A0            CP 0xA0
118   F80D 28 02            JR Z, found
119   F80F 18 CE            JR other
120   F811              found:
121   F811 79               LD A,C
122   F812 21 AD F7         LD HL, rtab
123   F815 CB 21            SLA C
124   F817 59               LD E,C
125   F818 16 00            LD D,0x0
126   F81A 19               ADD HL, DE
127   F81B 5E               LD E, (HL)
128   F81C 23               INC HL
129   F81D 56               LD D,(HL)
130   F81E EB               EX DE,HL
131   F81F 32 B0 5C         LD (var02),A
132   F822 E9               JP (HL)
133   F823
134   F823              comm:
135   F823              nexts:
136   F823              roner:
137   F823              offer:
138   F823              rren:
139   F823              rtr:
140   F823              rdel:
141   F823              rcha:
142   F823              raof:
143   F823              raon:
144   F823              rcopy:
145   F823              inter:
146   F823
147   F823 00 00 00...      DS 0xFA32-$,0  // 64050
148   FA32              rnew:
149   FA32 D7               RST CALBAS
150   FA33 20 00            DEFW 0x0020     ; Call NEXT-CHAR at ROM1. Test for keypress, incrementing CH-ADD
151   FA35 CD B7 05         CALL 0x05B7     ; ST-END Confirm end of statement and exit from ROM2 into ROM1 editor
152   FA38 D7               RST CALBAS
153   FA39 41 FA            DEFW new        ; copy NEW from ROM1 into Graphic character buffer
154   FA3B              retu:
155   FA3B C3 5F FA         JP rtu          ; Jump over NEW copy code and resume
156   FA3E              retv:
157   FA3E C3 7B FA         JP rtv
158   FA41              new:                ; Copy 1st part of fake NEW into grchbuf
159   FA41 11 58 FF         LD DE, grchbuf  ; Graphic character USR"a" buffer address
160   FA44 21 B7 11         LD HL, 0x11B7   ; NEW ROM1 1st routine block
161   FA47 01 47 00         LD BC, 0x0047   ; transfer 0x47 bytes 1st segment
162   FA4A ED B0            LDIR
163   FA4C 21 19 12         LD HL, 0x1219   ; NEW ROM1 second block
164   FA4F 01 5D 00         LD BC, 0x005D   ; transfer 0x5D bytes
165   FA52 ED B0            LDIR
166   FA54 21 3B FA         LD HL, retu     ; add rtu return address at the end of fake NEW copy 1st part
167   FA57 01 03 00         LD BC, 0x03     ; transfer 3 bytes
168   FA5A ED B0            LDIR
169   FA5C C3 58 FF         JP grchbuf      ; execute 1st part of fake NEW
170   FA5F              rtu:
171   FA5F 11 58 FF         LD DE, grchbuf
172   FA62 21 76 12         LD HL ,0x1276
173   FA65 01 2A 00         LD BC, 0x002A
174   FA68 ED B0            LDIR
175   FA6A 21 3E FA         LD HL, retv     ; add rtv return address at the end of fake NEW copy 2nd part
176   FA6D 01 03 00         LD BC, 0x03
177   FA70 ED B0            LDIR
178   FA72 21 89 FD         LD HL, pomsg
179   FA75 22 79 FF         LD (0xFF79),HL
180   FA78 C3 58 FF         JP grchbuf      ; execute 2nd part of fake NEW with pomsg welcome message and resume at rtv
181   FA7B              rtv:
182   FA7B CF               RST 0x08        ; Call Hook at ROM2
183   FA7C 31               DEFB 0x31       ; Creates the new system variables used by the Interface 1
184   FA7D 21 3C F7         LD HL, exten
185   FA80 22 B7 5C         LD (VECTOR),HL  ; Load our "exten" new command service routine into VECTOR System Variable
186   FA83 21 FF FF         LD HL, 0xFFFF   ; Copy Graphic Characters from ROM1 into used grchbuf top-down
187   FA86 11 AF 3E         LD DE, 0x3EAF
188   FA89 01 A0 00         LD BC,0x00A0
189   FA8C EB               EX DE,HL
190   FA8D ED B8            LDDR
191   FA8F 3A 6A 5C         LD A,(0x5C6A)   ; Activate Uppercase to easy new commands
192   FA92 CB DF            SET 3,A
193   FA94 32 6A 5C         LD (0x5C6A),A   ; FLAGS2 00000100 (Set CAPS LOCK)
194   FA97 3E 00            LD A,0x00
195   FA99 32 91 5C         LD (0x5C91),A   ; P-FLAGS 01011000 (Paper 9 temp, Ink 9 temp, Inverse permanent)
196   FA9C C3 A9 12         JP 0x12A9       ; MAIN-1 tranfer back control to ROM1 main execution loop
197   FA9F
198   FA9F              ; gap
199   FA9F 00 00 00...      DS 0xFCA9-$,0
200   FCA9              rfnd:
201   FCA9 D7               RST 0x10
202   FCAA 20 00            DEFW 0x0020
203   FCAC D7               RST 0x10
204   FCAD 8C 1C            DEFW 0x1C8C
205   FCAF CD B7 05         CALL 0x05B7
206   FCB2 D7               RST 0x10
207   FCB3 E3 FC            DEFW 0xFCE3
208   FCB5 C3 C1 05         JP 0x05C1
209   FCB8              ; to be continued
210   FCB8
211   FCB8 00 00 00...      DS 0xFD89-$,0  // 64905
212   FD89              pomsg:
213   FD89 A0               DEFB 0xA0
214   FD8A 4D 69 63 72      DEFB "Micro Basic O.S. ANC SPAIN "
214   FD8E 6F 20 42 61
214   FD92 73 69 63 20
214   FD96 4F 2E 53 2E
214   FD9A 20 41 4E 43
214   FD9E 20 53 50 41
214   FDA2 49 4E 20
215   FDA5 7F               DEFB 0x7F
216   FDA6 31 39 38         DEFB "198"
217   FDA9 B4               DEFB 0xB4
218   FDAA              ; gap
219   FDAA 00 00 00...      DS 0xFEF0-$,0
220   FEF0              rsave:
221   FEF0 3E F8            LD A,0xF8
222   FEF2 18 0A            JR sacon
223   FEF4              rload:
224   FEF4 3E EF            LD A,0xEF
225   FEF6 18 06            JR sacon
226   FEF8              rvery:
227   FEF8 3E D6            LD A,0xD6
228   FEFA 18 02            JR sacon
229   FEFC              rmerg:
230   FEFC 3E D5            LD A,0xD5
231   FEFE              sacon:
232   FEFE 01 0A 00         LD BC,0x0A
233   FF01 11 39 FF         LD DE,texcm
234   FF04 18 1A            JR ampli
235   FF06              rmove:
236   FF06 3E D1            LD A,0xD1
237   FF08 18 06            JR mocon
238   FF0A              reras:
239   FF0A 3E D2            LD A,0xD2
240   FF0C 18 02            JR mocon
241   FF0E              rform:
242   FF0E 3E D0            LD a,0xD0
243   FF10              mocon:
244   FF10 11 43 FF         LD DE, texsa
245   FF13 01 09 00         LD BC,0x9
246   FF16 18 08            JR ampli
247   FF18              ropen:
248   FF18 3E D3            LD A,0xD3
249   FF1A 11 4C FF         LD DE,texop
250   FF1D 01 0B 00         LD BC, 0x0B
251   FF20              ampli:
252   FF20 D5               PUSH DE
253   FF21 C5               PUSH BC
254   FF22 12               LD (DE),A
255   FF23 D7               RST 0x10
256   FF24 20 00            DEFW 0x0020
257   FF26 C1               POP BC
258   FF27 C5               PUSH BC
259   FF28 0B               DEC BC
260   FF29 D7               RST 0x10
261   FF2A 55 16            DEFW 0x1655
262   FF2C C1               POP BC
263   FF2D D1               POP DE
264   FF2E EB               EX DE,HL
265   FF2F ED B0            LDIR
266   FF31 EB               EX DE,HL
267   FF32 2B               DEC HL
268   FF33 22 5B 5C         LD (0x5C5B),HL
269   FF36 C3 F0 01         JP 0x01F0
270   FF39              texcm:
271   FF39 F8               DEFB 0xF8
272   FF3A              texmd:
273   FF3A 2A 22 6D 22      DEFB "*",0x22,"m",0x22,0x3B,"1",0x3B,0x22,0x22
273   FF3E 3B 31 3B 22
273   FF42 22
274   FF43              texsa
275   FF43 D1 22 6D 22      DEFB 0xD1,0x22,"m",0x22,0x3B,"1",0x3B,0x22,0x22
275   FF47 3B 31 3B 22
275   FF4B 22
276   FF4C              texop:
277   FF4C D3 38 3B 22      DEFB 0xD3,"8",0x3B,0x22,"m",0x22,0x3B,"1",0x3B,0x22,0x22
277   FF50 6D 22 3B 31
277   FF54 3B 22 22
278   FF57
# file closed: microbasic.asm
